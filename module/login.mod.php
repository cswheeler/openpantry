<?php	/*	login.mod.php		@richard pianka				http://localhost/pantry/login/module_command/		contains the login logic	*/		global $render;	global $module_commands;	$module_commands = array('signin', 'signout', 'accounts', 'register');		$parameters = array('module_command', 'select_command', 'id_command');	expand_get($parameters);		$login_framework = new Template();	$login_framework->load('login_framework');	$login_framework_render['message'] = '';	$login_framework_render['content'] = '';		/* ====================================	   === All of the display functions ===	   ==================================== */		function render_all() {		// last thing to execute in this module		global $login_framework_render;		global $login_framework;		global $render;				$login_framework->set_vars($login_framework_render);		$login_framework->parse();		$render['tier_2'] = $login_framework->final;	}		function render_login() {		global $login_framework_render;		global $parameters;		foreach ($parameters as $parameter)			global $$parameter;		$content = "";				$login_login = new Template();		$login_login->load('login_login');		$login_login_render['title'] = '';		$login_login->set_vars($login_login_render);		$login_login->parse();		$content = $login_login->final;				$login_framework_render['content'] = $content;				render_all();	}		function render_accounts() {		global $login_framework_render;		global $parameters;		foreach ($parameters as $parameter)			global $$parameter;		$content = "";				$login_account_list = new Template();		$login_account_list->load('login_account_list');		$login_account_list_render['accounts'] = '';			$login_account_row = new Template();		$login_account_row->load('login_account_row');		$login_account_row_render['id'] = '';		$login_account_row_render['username'] = '';		$login_account_row_render['first_name'] = '';		$login_account_row_render['last_name'] = '';		$login_account_row_render['email'] = '';		$login_account_row_render['access'] = '';		$users = get_all_users();		foreach($users as $user) {			$login_account_row_render['id'] = $user['userid'];			$login_account_row_render['username'] = $user['username'];			$login_account_row_render['first_name'] = $user['first_name'];			$login_account_row_render['last_name'] = $user['last_name'];			$login_account_row_render['email'] = $user['email'];			$login_account_row_render['access'] = $user['access'];			$login_account_row->set_vars($login_account_row_render);			$login_account_row->parse();			$login_account_list_render['accounts'] .= $login_account_row->final;		}				$login_account_list->set_vars($login_account_list_render);		$login_account_list->parse();				$login_framework_render['content'] = $login_account_list->final;		render_all();	}		function render_edit_account($userid) {		global $login_framework_render;		global $parameters;		foreach ($parameters as $parameter)			global $$parameter;		$user = get_user_by_id($userid);		$content = "";				$login_account_edit = new Template();		$login_account_edit->load('login_account_edit');		$login_account_edit_render['id'] = $user['userid'];		$login_account_edit_render['username'] = $user['username'];		$login_account_edit_render['firstname'] = $user['first_name'];		$login_account_edit_render['lastname'] = $user['last_name'];		$login_account_edit_render['email'] = $user['email'];		$login_account_edit->set_vars($login_account_edit_render);		$login_account_edit->parse();		$content = $login_account_edit->final;				$login_framework_render['content'] = $content;				render_all();	}		function render_account_new($mismatch) {		global $login_framework_render;		global $parameters;		foreach ($parameters as $parameter)			global $$parameter;		$content = "";				$login_account_edit = new Template();		$login_account_edit->load('login_account_new');		$login_account_edit_render['mismatch'] = '';		if(isset($mismatch) && $mismatch == "mismatch")			$login_account_edit_render['mismatch'] = 'Passwords do not match';		$login_account_edit->set_vars($login_account_edit_render);		$login_account_edit->parse();		$content = $login_account_edit->final;				$login_framework_render['content'] = $content;				render_all();	}		function render_account_change_password($userid, $error) {		global $login_framework_render;		global $parameters;		foreach ($parameters as $parameter)			global $$parameter;		$content = "";		$user = get_user_by_id($userid);				$login_account_edit = new Template();		$login_account_edit->load('login_account_change_password');		$login_account_edit_render['error'] = $error;		$login_account_edit_render['id'] = $user['userid'];		$login_account_edit_render['username'] = $user['username'];		$login_account_edit->set_vars($login_account_edit_render);		$login_account_edit->parse();		$content = $login_account_edit->final;				$login_framework_render['content'] = $content;				render_all();	}		/* ===============================	   === Start Building the page ===	   =============================== */		if (!isset($module_command)) {		// display main blog page		render_login();		return;	}		// module logic	if (in_array($module_command, $module_commands)) {		switch ($module_command) {			case 'signin':				$username = post('username');				$password = post('password');				$message = '';								$user_entry = get_user_by_username($username);				$checksum = md5(md5($password) . $user_entry['salt']);				if ($checksum == $user_entry['password']) {					// pass					$message = 'Login succeeded!';					set_session('user', serialize($user_entry));					redirect('/pantry/home');				} else {					// fail					$message = 'Login failed!';				}				$login_framework_render['message'] = $message;								render_login();				break;			case 'signout':				set_session('user', '');				redirect('/pantry/login');				break;			case 'accounts':				if(isset($select_command)) {					switch($select_command) {						case 'edit':							if(post('did_submit') == 'yes') {								edit_user(post('userid'), post('username'), post('firstname'), post('lastname'), post('email'));								redirect('/pantry/login/accounts/');							}													if(isset($id_command))								render_edit_account($id_command);							else								redirect('/pantry/error/invalid-page');							break;						case 'delete':							if(post('did_submit') == 'yes')								delete_user(post('userid'));							exit();							break;						case 'change_password':							if(!isset($id_command))								redirect('/pantry/login/accounts/');							else								$userid = $id_command;							if(post('did_submit') == 'yes') {								if(post('new_password') == post('new_password_confirm')) {									if(user_change_password($userid, post('old_password'), post('new_password')))										redirect('/pantry/login');									else										render_account_change_password($userid,'Old password invalid');								} else {									render_account_change_password($userid,'New passwords do not match');								}							} else								render_account_change_password($userid,'');							break;						default:							redirect('/pantry/error/invalid-page');					}				} else					render_accounts();				break;			case 'register':				if(post('did_submit') == 'yes') {					if(post('password') == post('password_confirm')) {						$access_default = '1073741824';						create_user(post('username'), post('password'), post('first_name'), post('last_name'), post('email'), $access_default);						redirect('/pantry/login/accounts/');					} else 						redirect('/pantry/login/register/mismatch');				} else {					if(isset($select_command))						render_account_new($select_command);					else						render_account_new('');				}				break;			default:				$login_framework_render['message'] = 'An error occurred.';				render_login();		}		render_all();		return;	}	?>